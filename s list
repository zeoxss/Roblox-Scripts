local kdwa = {
    center = true,
    name = "Spectators",
    length = 200
}

local function getTextBounds(text)
    local new = Drawing.new("Text")
    new.Size = 13
    new.Position = Vector2.new(-500, -500)
    new.Font = Drawing.Fonts.Plex
    new.Text = text
    new.Visible = true
    new.Transparency = 1
    new.ZIndex = 1
    local x = Vector2.new(new.TextBounds.X, new.TextBounds.Y)
    new:Remove()
    return x
end

local Spectators = Drawing.new("Text")
local Spectators_box = Drawing.new("Square")
local Spectators_accent = Drawing.new("Square")
local Spectators_outline = Drawing.new("Square")
local Drawings = {}
local Drawings_amount = 0

Spectators_box.Position = Vector2.new(1, 1080/2)
Spectators_box.Visible = true
Spectators_box.Transparency = 1
Spectators_box.ZIndex = 999998
Spectators_box.Filled = true
Spectators_box.Color = Color3.fromRGB(19, 17, 19)

Spectators.Size = 13
Spectators.ZIndex = 999999
Spectators.Visible = true
Spectators.Outline = true
Spectators.Color = Color3.fromRGB(168, 52, 235)
Spectators.Font = Drawing.Fonts.Plex
Spectators.Text = kdwa.name
Spectators.Position = Vector2.new(4, Spectators_box.Position.Y + 2)

Spectators_accent.Position = Vector2.new(1, 1080/2 - 2)
Spectators_accent.Visible = true
Spectators_accent.Transparency = 1
Spectators_accent.ZIndex = 999999
Spectators_accent.Filled = true
Spectators_accent.Color = Color3.fromRGB(168, 52, 235)

Spectators_outline.Position = Vector2.new(0, 1080/2 - 3)
Spectators_outline.Visible = true
Spectators_outline.Transparency = 1
Spectators_outline.ZIndex = 999997
Spectators_outline.Filled = true
Spectators_outline.Color = Color3.fromRGB(0, 0, 0)

game:GetService("RunService").RenderStepped:Connect(function()
    local spectators = {}
    for i, plr in pairs(game:GetService("Players"):GetPlayers()) do
        if plr ~= game:GetService("Players").LocalPlayer then
            if game:GetService("Players").LocalPlayer.Character then
                if not (plr.Character and plr.Character:FindFirstChild("Humanoid") and plr.Character:FindFirstChild("Head") and plr.Character.Humanoid.Health > 0) then
                    if (plr.CameraCF.Value.p - game:GetService("Players").LocalPlayer.CameraCF.Value.p).magnitude < 23 then
                        table.insert(spectators, plr)
                    end
                end
            end
        end
    end
    for i,v in pairs(Drawings) do
        v:Remove()
        table.remove(Drawings, i)
    end
    Spectators_box.Size = Vector2.new(0, 13)
    Spectators_accent.Size = Vector2.new(0, 3)
    Spectators_outline.Size = Vector2.new(0, 18)
    local longest = Spectators.TextBounds.X
    Drawings_amount = 0
    local texts = {}
    for _, plr in pairs(spectators) do
        local Spectator = Drawing.new("Text")
        Spectator.Position = Vector2.new(4, Spectators.Position.Y + 13 + Drawings_amount*13)
        Spectator.Font = Drawing.Fonts.Plex
        Spectator.Size = 13
        Spectator.ZIndex = 999999
        Spectator.Visible = true
        Spectator.Text = plr.Name..""
        Spectator.Color = Color3.fromRGB(255, 255, 255)
        Spectator.Outline = true
        Drawings_amount = Drawings_amount + 1
        table.insert(Drawings, Spectator)
        if Spectator.TextBounds.X > longest then longest = Spectator.TextBounds.X; end
        Spectators_box.Size = Spectators_box.Size + Vector2.new(0, 13)
        Spectators_outline.Size = Spectators_box.Size + Vector2.new(0, 13)
        table.insert(texts, Spectator)
    end
    if not kdwa.center then
        Spectators_box.Size = Vector2.new(longest + 8, Spectators_box.Size.Y)
        Spectators_outline.Size = Vector2.new(kdwa.length + 10, Spectators_box.Size.Y)
        Spectators_accent.Size = Vector2.new(longest + 8, 2)
    else
        Spectators_box.Size = Vector2.new(kdwa.length + 8, Spectators_box.Size.Y)
        Spectators_outline.Size = Vector2.new(kdwa.length + 10, Spectators_box.Size.Y)
        Spectators_accent.Size = Vector2.new(kdwa.length + 8, 2)
    end
    Spectators_box.Size = Spectators_box.Size + Vector2.new(0, 6)
    Spectators_outline.Size = Spectators_outline.Size + Vector2.new(0, 10)
    if kdwa.center then
        local box = Spectators_box
        for i,v in pairs(texts) do
            v.Position = Vector2.new((box.Position.X + box.Size.X/2) - (getTextBounds(v.Text).X/2), v.Position.Y)
            texts[i] = nil
        end
        Spectators.Position = Vector2.new((box.Position.X + box.Size.X/2) - (getTextBounds(kdwa.name).X/2), Spectators.Position.Y)
    end
end)
